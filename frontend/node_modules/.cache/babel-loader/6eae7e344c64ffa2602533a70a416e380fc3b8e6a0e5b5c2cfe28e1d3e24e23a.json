{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { authConstants } from \"./constants\";\nimport { userConstants } from \"./constants\";\nimport { toast } from \"react-toastify\";\n\n//action for login\nexport const login = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    //post request from front end to signin with the data from frontend\n    const res = await axios.post(`/admin/signin`, {\n      ...user\n    });\n\n    //if respond is 200 (user successfully login)\n    if (res.status === 200) {\n      const {\n        token,\n        user\n      } = res.data;\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n\n      //show success notification\n      toast.success(\"Login Success!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n    //if backend error\n    if (res.status === 202) {\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          errormsg: res.data.errormsg\n        }\n      });\n      //show error notification\n      toast.error(res.data.errormsg, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n};\n\n//action for signup\nexport const signup = user => {\n  return async dispatch => {\n    dispatch({\n      type: userConstants.USER_SIGNUP_REQUEST\n    });\n    const res = await axios.post(`/admin/signup`, user);\n\n    //if respond is 201 (user successfully signup)\n    if (res.status === 201) {\n      dispatch({\n        type: userConstants.USER_SIGNUP_SUCCESS,\n        payload: {\n          error: res.data\n        }\n      });\n\n      //show success notification\n      toast.success(\"Signup Success!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      //if backend error\n      dispatch({\n        type: userConstants.USER_SIGNUP_FAILURE,\n        payload: {\n          errormsg: res.data.errormsg\n        }\n      });\n\n      //show error notification\n      toast.error(res.data.errormsg, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n};\n\n//if user is logged in then stop user going again to /signin\nexport const isUserLoggedIn = () => {\n  return async dispatch => {\n    //getting stored token in the localstorage\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      dispatch({\n        type: authConstants.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      //if backend error\n      dispatch({\n        type: authConstants.LOGIN_FAILURE,\n        payload: {\n          error: \"Failed to login!\"\n        }\n      });\n    }\n  };\n};\n\n//action for signout\nexport const signout = () => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(\"/admin/signout\");\n\n    //if respond is 200 (user successfully signout)\n    if (res.status === 200) {\n      localStorage.clear();\n      dispatch({\n        type: authConstants.LOGOUT_SUCCESS\n      });\n    } else {\n      dispatch({\n        type: authConstants.LOGOUT_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\n\n/* import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\n\r\nexport const login = (user) => {\r\n\r\n    console.log(user)\r\n\r\n    return async (dispatch) => {\r\n\r\n       dispatch({ type: authConstants.LOGIN_REQUEST });\r\n        const res = await axios.post(`/admin/signin`, {\r\n            ...user\r\n        })\r\n       if(res.status === 200){\r\n            const { token, user } = res.data;\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    ...user\r\n                }\r\n            });\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                    });\r\n            }\r\n        }\r\n   }\r\n}\r\n export const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: { error: 'Failed to login' }\r\n            });\r\n        }\r\n    }\r\n}\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n        const res = await axios.post(`/admin/signout`);\r\n\r\n        if(res.status === 200){\r\n            localStorage.clear();\r\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGOUT_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n */","map":{"version":3,"names":["axios","authConstants","userConstants","toast","login","user","dispatch","type","LOGIN_REQUEST","res","post","status","token","data","localStorage","setItem","JSON","stringify","LOGIN_SUCCESS","payload","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","LOGIN_FAILURE","errormsg","error","signup","USER_SIGNUP_REQUEST","USER_SIGNUP_SUCCESS","USER_SIGNUP_FAILURE","isUserLoggedIn","getItem","parse","signout","clear","LOGOUT_SUCCESS","LOGOUT_FAILURE"],"sources":["C:/Users/User/Desktop/Final/frontend/src/actions/auth.actions.js"],"sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { authConstants } from \"./constants\";\r\nimport { userConstants } from \"./constants\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//action for login\r\nexport const login = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n    //post request from front end to signin with the data from frontend\r\n    const res = await axios.post(`/admin/signin`, {\r\n      ...user,\r\n    });\r\n\r\n    //if respond is 200 (user successfully login)\r\n    if (res.status === 200) {\r\n      const { token, user } = res.data;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n\r\n      //show success notification\r\n      toast.success(\"Login Success!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n    //if backend error\r\n    if (res.status === 202) {\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { errormsg: res.data.errormsg },\r\n      });\r\n      //show error notification\r\n      toast.error(res.data.errormsg, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//action for signup\r\nexport const signup = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: userConstants.USER_SIGNUP_REQUEST });\r\n\r\n    const res = await axios.post(`/admin/signup`, user);\r\n\r\n    //if respond is 201 (user successfully signup)\r\n    if (res.status === 201) {\r\n      dispatch({\r\n        type: userConstants.USER_SIGNUP_SUCCESS,\r\n        payload: { error: res.data },\r\n      });\r\n\r\n      //show success notification\r\n      toast.success(\"Signup Success!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      //if backend error\r\n      dispatch({\r\n        type: userConstants.USER_SIGNUP_FAILURE,\r\n        payload: { errormsg: res.data.errormsg },\r\n      });\r\n\r\n      //show error notification\r\n      toast.error(res.data.errormsg, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//if user is logged in then stop user going again to /signin\r\nexport const isUserLoggedIn = () => {\r\n  return async (dispatch) => {\r\n    //getting stored token in the localstorage\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      dispatch({\r\n        type: authConstants.LOGIN_SUCCESS,\r\n        payload: {\r\n          token,\r\n          user,\r\n        },\r\n      });\r\n    } else {\r\n      //if backend error\r\n      dispatch({\r\n        type: authConstants.LOGIN_FAILURE,\r\n        payload: { error: \"Failed to login!\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//action for signout\r\nexport const signout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: authConstants.LOGIN_REQUEST });\r\n\r\n    const res = await axios.post(\"/admin/signout\");\r\n\r\n    //if respond is 200 (user successfully signout)\r\n    if (res.status === 200) {\r\n      localStorage.clear();\r\n      dispatch({\r\n        type: authConstants.LOGOUT_SUCCESS,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: authConstants.LOGOUT_FAILURE,\r\n        payload: { error: res.data.error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import { authConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\n\r\nexport const login = (user) => {\r\n\r\n    console.log(user)\r\n\r\n    return async (dispatch) => {\r\n\r\n       dispatch({ type: authConstants.LOGIN_REQUEST });\r\n        const res = await axios.post(`/admin/signin`, {\r\n            ...user\r\n        })\r\n       if(res.status === 200){\r\n            const { token, user } = res.data;\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    ...user\r\n                }\r\n            });\r\n        }else{\r\n            if(res.status === 400){\r\n                dispatch({\r\n                    type: authConstants.LOGIN_FAILURE,\r\n                    payload: { error: res.data.error }\r\n                    });\r\n            }\r\n        }\r\n   }\r\n}\r\n export const isUserLoggedIn = () => {\r\n    return async dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            dispatch({\r\n                type: authConstants.LOGIN_SUCCESS,\r\n                payload: {\r\n                    token, user\r\n                }\r\n            });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGIN_FAILURE,\r\n                payload: { error: 'Failed to login' }\r\n            });\r\n        }\r\n    }\r\n}\r\nexport const signout = () => {\r\n    return async dispatch => {\r\n\r\n        dispatch({ type: authConstants.LOGOUT_REQUEST });\r\n        const res = await axios.post(`/admin/signout`);\r\n\r\n        if(res.status === 200){\r\n            localStorage.clear();\r\n            dispatch({ type: authConstants.LOGOUT_SUCCESS });\r\n        }else{\r\n            dispatch({\r\n                type: authConstants.LOGOUT_FAILURE,\r\n                payload: { error: res.data.error }\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}