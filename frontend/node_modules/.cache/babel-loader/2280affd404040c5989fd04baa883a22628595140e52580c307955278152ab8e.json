{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { productConstants } from \"./constants\";\nimport { toast } from \"react-toastify\";\n\n//action to get all products from database\nconst getAllProducts = () => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.GET_ALL_PRODUCTS_REQUEST\n    });\n    const res = await axios.get(\"product/getproducts\");\n    console.log(res);\n    if (res.status === 200) {\n      const {\n        products\n      } = res.data;\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\n        payload: {\n          products: products\n        }\n      });\n    } else {\n      dispatch({\n        type: productConstants.GET_ALL_PRODUCTS_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\n\n//action to add product\nexport const addProduct = form => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.ADD_NEW_PRODUCT_REQUEST\n    });\n    try {\n      const res = await axios.post(\"product/create\", form);\n      if (res.status === 201) {\n        dispatch({\n          type: productConstants.ADD_NEW_PRODUCT_SUCCESS,\n          payload: {\n            product: res.data.product\n          }\n        });\n        dispatch(getAllProducts());\n        toast.success(res.data.msg, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      } else {\n        dispatch({\n          type: productConstants.ADD_NEW_PRODUCT_FAILURE,\n          payload: res.data.error\n        });\n        toast.error(res.data.error, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined\n        });\n      }\n      console.log(res);\n    } catch (error) {\n      console.log(error.reponse);\n    }\n  };\n};\n\n//action to a update product\nexport const updateProduct = form => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.UPDATE_PRODUCT_REQUEST\n    });\n    const res = await axios.post(\"/product/update\", form);\n    if (res.status === 201) {\n      dispatch({\n        type: productConstants.UPDATE_PRODUCT_SUCCESS\n      });\n      dispatch(getAllProducts());\n      toast.success(res.data.msg, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      const {\n        error\n      } = res.data;\n      dispatch({\n        type: productConstants.UPDATE_PRODUCT_FAILURE,\n        payload: {\n          error\n        }\n      });\n      toast.error(res.data.error, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n};\n\n//action to delete a product\nexport const deleteProduct = id => {\n  return async dispatch => {\n    dispatch({\n      type: productConstants.DELETE_PRODUCT_REQUEST\n    });\n    const res = await axios.delete(\"product/delete/\" + id);\n    if (res.status === 200) {\n      dispatch(getAllProducts());\n      dispatch({\n        type: productConstants.DELETE_PRODUCT_SUCCESS\n      });\n      toast.success(res.data.msg, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    } else {\n      const {\n        error\n      } = res.data;\n      dispatch({\n        type: productConstants.DELETE_PRODUCT_FAILURE,\n        payload: {\n          error\n        }\n      });\n      toast.error(res.data.error, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n    }\n  };\n};\nexport { getAllProducts };\n\n/* import axios from \"../helpers/axios\";\r\nimport { productConstants } from \"./constants\";\r\n\r\n// new action\r\nconst getProducts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\r\n      const res = await axios.post(`product/getProducts`);\r\n      if (res.status === 200) {\r\n        const { products } = res.data;\r\n        dispatch({\r\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n          payload: { products },\r\n        });\r\n      } else {\r\n        dispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// modified actrion\r\nexport const addProduct = (form) => {\r\n  return async (dispatch) => {\r\n     try {\r\n      dispatch({ type: productConstants.ADD_PRODUCT_REQUEST });\r\n      const res = await axios.post(`product/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// new action\r\nexport const deleteProductById = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`product/deleteProductById`, {\r\n        data: { payload },\r\n      });\r\n      dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_REQUEST });\r\n      if (res.status === 202) {\r\n        dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: productConstants.DELETE_PRODUCT_BY_ID_FAILURE,\r\n          payload: {\r\n            error,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}; */","map":{"version":3,"names":["axios","productConstants","toast","getAllProducts","dispatch","type","GET_ALL_PRODUCTS_REQUEST","res","get","console","log","status","products","data","GET_ALL_PRODUCTS_SUCCESS","payload","GET_ALL_PRODUCTS_FAILURE","error","addProduct","form","ADD_NEW_PRODUCT_REQUEST","post","ADD_NEW_PRODUCT_SUCCESS","product","success","msg","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ADD_NEW_PRODUCT_FAILURE","reponse","updateProduct","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAILURE","deleteProduct","id","DELETE_PRODUCT_REQUEST","delete","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAILURE"],"sources":["C:/Users/User/Desktop/Final/frontend/src/actions/product.actions.js"],"sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { productConstants } from \"./constants\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n//action to get all products from database\r\nconst getAllProducts = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\r\n\r\n    const res = await axios.get(\"product/getproducts\");\r\n    console.log(res);\r\n\r\n    if (res.status === 200) {\r\n      const { products } = res.data;\r\n\r\n      dispatch({\r\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: { products: products },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: productConstants.GET_ALL_PRODUCTS_FAILURE,\r\n        payload: {\r\n          error: res.data.error,\r\n        },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//action to add product\r\nexport const addProduct = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: productConstants.ADD_NEW_PRODUCT_REQUEST });\r\n\r\n    try {\r\n      const res = await axios.post(\"product/create\", form);\r\n      if (res.status === 201) {\r\n        dispatch({\r\n          type: productConstants.ADD_NEW_PRODUCT_SUCCESS,\r\n          payload: { product: res.data.product },\r\n        });\r\n        dispatch(getAllProducts());\r\n\r\n        toast.success(res.data.msg, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: productConstants.ADD_NEW_PRODUCT_FAILURE,\r\n          payload: res.data.error,\r\n        });\r\n\r\n        toast.error(res.data.error, {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n      }\r\n      console.log(res);\r\n    } catch (error) {\r\n      console.log(error.reponse);\r\n    }\r\n  };\r\n};\r\n\r\n//action to a update product\r\nexport const updateProduct = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: productConstants.UPDATE_PRODUCT_REQUEST });\r\n\r\n    const res = await axios.post(\"/product/update\", form);\r\n    if (res.status === 201) {\r\n      dispatch({ type: productConstants.UPDATE_PRODUCT_SUCCESS });\r\n      dispatch(getAllProducts());\r\n\r\n      toast.success(res.data.msg, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      const { error } = res.data;\r\n      dispatch({\r\n        type: productConstants.UPDATE_PRODUCT_FAILURE,\r\n        payload: { error },\r\n      });\r\n\r\n      toast.error(res.data.error, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//action to delete a product\r\nexport const deleteProduct = (id) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: productConstants.DELETE_PRODUCT_REQUEST });\r\n\r\n    const res = await axios.delete(\"product/delete/\" + id);\r\n\r\n    if (res.status === 200) {\r\n      dispatch(getAllProducts());\r\n      dispatch({\r\n        type: productConstants.DELETE_PRODUCT_SUCCESS,\r\n      });\r\n\r\n      toast.success(res.data.msg, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } else {\r\n      const { error } = res.data;\r\n      dispatch({\r\n        type: productConstants.DELETE_PRODUCT_FAILURE,\r\n        payload: { error },\r\n      });\r\n\r\n      toast.error(res.data.error, {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport { getAllProducts };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import axios from \"../helpers/axios\";\r\nimport { productConstants } from \"./constants\";\r\n\r\n// new action\r\nconst getProducts = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch({ type: productConstants.GET_ALL_PRODUCTS_REQUEST });\r\n      const res = await axios.post(`product/getProducts`);\r\n      if (res.status === 200) {\r\n        const { products } = res.data;\r\n        dispatch({\r\n          type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n          payload: { products },\r\n        });\r\n      } else {\r\n        dispatch({ type: productConstants.GET_ALL_PRODUCTS_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// modified actrion\r\nexport const addProduct = (form) => {\r\n  return async (dispatch) => {\r\n     try {\r\n      dispatch({ type: productConstants.ADD_PRODUCT_REQUEST });\r\n      const res = await axios.post(`product/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        dispatch({ type: productConstants.ADD_PRODUCT_FAILURE });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n// new action\r\nexport const deleteProductById = (payload) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const res = await axios.delete(`product/deleteProductById`, {\r\n        data: { payload },\r\n      });\r\n      dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_REQUEST });\r\n      if (res.status === 202) {\r\n        dispatch({ type: productConstants.DELETE_PRODUCT_BY_ID_SUCCESS });\r\n        dispatch(getProducts());\r\n      } else {\r\n        const { error } = res.data;\r\n        dispatch({\r\n          type: productConstants.DELETE_PRODUCT_BY_ID_FAILURE,\r\n          payload: {\r\n            error,\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}; */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}