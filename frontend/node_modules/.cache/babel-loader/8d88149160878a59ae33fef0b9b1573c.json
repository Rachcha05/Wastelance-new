{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\Final\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\Final\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { categoryConstants } from \"../actions/constants\";\nvar initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\nvar buildNewCategories = function buildNewCategories(categories, category) {\n  return [].concat(_toConsumableArray(categories), [{\n    _id: category._id,\n    name: category.name,\n    slug: category.slug,\n    description: category.description\n  }]);\n};\nvar categoryReducer = function categoryReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\n      return _objectSpread({}, state, {\n        categories: action.payload.categories,\n        loading: false\n      });\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      var category = action.payload.category;\n      var updatedCategories = buildNewCategories(state.categories, category);\n      console.log(\"updatedCategories\", updatedCategories);\n      return _objectSpread({}, state, {\n        categories: updatedCategories,\n        loading: false\n      });\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      return _objectSpread({}, initState, {\n        loading: false,\n        error: action.payload.error\n      });\n    case categoryConstants.UPDATE_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n    case categoryConstants.UPDATE_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n    case categoryConstants.UPDATE_CATEGORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload.error,\n        loading: false\n      });\n    case categoryConstants.DELETE_CATEGORY_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n    case categoryConstants.DELETE_CATEGORY_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n    case categoryConstants.DELETE_CATEGORY_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload.error,\n        loading: false\n      });\n    default:\n      return state;\n  }\n};\nexport default categoryReducer;\n\n/* import { categoryConstansts } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if(parentId === undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n   \r\n    for(let cat of categories){\r\n\r\n        if(cat._id === parentId){\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                type: category.type,\r\n                children: []\r\n            };\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return myCategories;\r\n}\r\n\r\n\r\nconst categoryReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n           \r\n        case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\r\n           return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\r\n           const category = action.payload.category;\r\n           const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n           console.log('updated categoires', updatedCategories);\r\n            \r\n            return {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false,\r\n            }\r\n           \r\n        case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\r\n           return {\r\n                ...initState,\r\n                loading: false,\r\n                //error: action.payload.error\r\n            }\r\n            \r\n        case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\r\n          return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n           \r\n        case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\r\n           return{\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_REQUEST:\r\n           return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n            \r\n    \r\n    default:\r\n    return state;\r\n}\r\n};\r\nexport default categoryReducer; */","map":{"version":3,"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","category","concat","_toConsumableArray","_id","name","slug","description","categoryReducer","state","arguments","length","undefined","action","type","GET_ALL_CATEGORIES_SUCCESS","_objectSpread","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE","UPDATE_CATEGORY_REQUEST","UPDATE_CATEGORY_SUCCESS","UPDATE_CATEGORY_FAILURE","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_FAILURE"],"sources":["C:/Users/User/Desktop/Final/frontend/src/reducers/category.reducer.js"],"sourcesContent":["import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  categories: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst buildNewCategories = (categories, category) => {\r\n  return [\r\n    ...categories,\r\n    {\r\n      _id: category._id,\r\n      name: category.name,\r\n      slug: category.slug,\r\n      description: category.description,\r\n    },\r\n  ];\r\n};\r\n\r\nconst categoryReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n        loading: false,\r\n      };\r\n      \r\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n      return{\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    \r\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n      const category = action.payload.category;\r\n      const updatedCategories = buildNewCategories(state.categories, category);\r\n      console.log(\"updatedCategories\", updatedCategories);\r\n\r\n      return {\r\n        ...state,\r\n        categories: updatedCategories,\r\n        loading: false,\r\n      };\r\n      \r\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n      return {\r\n        ...initState,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      \r\n    case categoryConstants.UPDATE_CATEGORY_REQUEST:\r\n      return { ...state, loading: true };\r\n      \r\n    case categoryConstants.UPDATE_CATEGORY_SUCCESS:\r\n      return { ...state, loading: false };\r\n     \r\n    case categoryConstants.UPDATE_CATEGORY_FAILURE:\r\n      return { ...state, error: action.payload.error, loading: false };\r\n      \r\n    case categoryConstants.DELETE_CATEGORY_REQUEST:\r\n      return { ...state, loading: true };\r\n      \r\n    case categoryConstants.DELETE_CATEGORY_SUCCESS:\r\n      return{ ...state, loading: false };\r\n    \r\n    case categoryConstants.DELETE_CATEGORY_FAILURE:\r\n      return { ...state, error: action.payload.error, loading: false };\r\n      \r\n  default:\r\n  return state;\r\n    }\r\n};\r\n\r\nexport default categoryReducer;\r\n\r\n\r\n/* import { categoryConstansts } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if(parentId === undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n   \r\n    for(let cat of categories){\r\n\r\n        if(cat._id === parentId){\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                type: category.type,\r\n                children: []\r\n            };\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return myCategories;\r\n}\r\n\r\n\r\nconst categoryReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n           \r\n        case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\r\n           return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\r\n           const category = action.payload.category;\r\n           const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n           console.log('updated categoires', updatedCategories);\r\n            \r\n            return {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false,\r\n            }\r\n           \r\n        case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\r\n           return {\r\n                ...initState,\r\n                loading: false,\r\n                //error: action.payload.error\r\n            }\r\n            \r\n        case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\r\n          return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n           \r\n        case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\r\n           return{\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_REQUEST:\r\n           return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n            \r\n    \r\n    default:\r\n    return state;\r\n}\r\n};\r\nexport default categoryReducer; */"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,sBAAsB;AAExD,IAAMC,SAAS,GAAG;EAChBC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIH,UAAU,EAAEI,QAAQ,EAAK;EACnD,UAAAC,MAAA,CAAAC,kBAAA,CACKN,UAAU,IACb;IACEO,GAAG,EAAEH,QAAQ,CAACG,GAAG;IACjBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;IACnBC,IAAI,EAAEL,QAAQ,CAACK,IAAI;IACnBC,WAAW,EAAEN,QAAQ,CAACM;EACxB,CAAC;AAEL,CAAC;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAkC;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGd,SAAS;EAAA,IAAEiB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKnB,iBAAiB,CAACoB,0BAA0B;MAC/C,OAAAC,aAAA,KACKP,KAAK;QACRZ,UAAU,EAAEgB,MAAM,CAACI,OAAO,CAACpB,UAAU;QACrCC,OAAO,EAAE;MAAK;IAGlB,KAAKH,iBAAiB,CAACuB,wBAAwB;MAC7C,OAAAF,aAAA,KACKP,KAAK;QACRX,OAAO,EAAE;MAAI;IAGjB,KAAKH,iBAAiB,CAACwB,wBAAwB;MAC7C,IAAMlB,QAAQ,GAAGY,MAAM,CAACI,OAAO,CAAChB,QAAQ;MACxC,IAAMmB,iBAAiB,GAAGpB,kBAAkB,CAACS,KAAK,CAACZ,UAAU,EAAEI,QAAQ,CAAC;MACxEoB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,iBAAiB,CAAC;MAEnD,OAAAJ,aAAA,KACKP,KAAK;QACRZ,UAAU,EAAEuB,iBAAiB;QAC7BtB,OAAO,EAAE;MAAK;IAGlB,KAAKH,iBAAiB,CAAC4B,wBAAwB;MAC7C,OAAAP,aAAA,KACKpB,SAAS;QACZE,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEc,MAAM,CAACI,OAAO,CAAClB;MAAK;IAG/B,KAAKJ,iBAAiB,CAAC6B,uBAAuB;MAC5C,OAAAR,aAAA,KAAYP,KAAK;QAAEX,OAAO,EAAE;MAAI;IAElC,KAAKH,iBAAiB,CAAC8B,uBAAuB;MAC5C,OAAAT,aAAA,KAAYP,KAAK;QAAEX,OAAO,EAAE;MAAK;IAEnC,KAAKH,iBAAiB,CAAC+B,uBAAuB;MAC5C,OAAAV,aAAA,KAAYP,KAAK;QAAEV,KAAK,EAAEc,MAAM,CAACI,OAAO,CAAClB,KAAK;QAAED,OAAO,EAAE;MAAK;IAEhE,KAAKH,iBAAiB,CAACgC,uBAAuB;MAC5C,OAAAX,aAAA,KAAYP,KAAK;QAAEX,OAAO,EAAE;MAAI;IAElC,KAAKH,iBAAiB,CAACiC,uBAAuB;MAC5C,OAAAZ,aAAA,KAAWP,KAAK;QAAEX,OAAO,EAAE;MAAK;IAElC,KAAKH,iBAAiB,CAACkC,uBAAuB;MAC5C,OAAAb,aAAA,KAAYP,KAAK;QAAEV,KAAK,EAAEc,MAAM,CAACI,OAAO,CAAClB,KAAK;QAAED,OAAO,EAAE;MAAK;IAElE;MACA,OAAOW,KAAK;EACV;AACJ,CAAC;AAED,eAAeD,eAAe},"metadata":{},"sourceType":"module"}