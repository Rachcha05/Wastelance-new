{"ast":null,"code":"import { categoryConstansts } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n};\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n  if (parentId === undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      type: category.type,\n      children: []\n    }];\n  }\n  for (let cat of categories) {\n    if (cat._id === parentId) {\n      const newCategory = {\n        _id: category._id,\n        name: category.name,\n        slug: category.slug,\n        parentId: category.parentId,\n        type: category.type,\n        children: []\n      };\n      myCategories.push({\n        ...cat,\n        children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\n      });\n    } else {\n      myCategories.push({\n        ...cat,\n        children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n  return myCategories;\n};\nconst categoryReducer = (state = initState, action) => {\n  switch (action.type) {\n    case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload.categories\n      };\n    case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\n      const category = action.payload.category;\n      const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\n      console.log('updated categoires', updatedCategories);\n      return {\n        ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n    case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\n      return {\n        ...initState,\n        loading: false\n        //error: action.payload.error\n      };\n\n    case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        loading: false\n      };\n    case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: false\n      };\n    case categoryConstansts.DELETE_CATEGORIES_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        loading: false\n      };\n    case categoryConstansts.DELETE_CATEGORIES_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      };\n    default:\n      return state;\n  }\n};\nexport default categoryReducer;","map":{"version":3,"names":["categoryConstansts","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","type","children","cat","newCategory","push","length","categoryReducer","state","action","GET_ALL_CATEGORIES_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","updatedCategories","console","log","ADD_NEW_CATEGORY_FAILURE","UPDATE_CATEGORIES_REQUEST","UPDATE_CATEGORIES_SUCCESS","UPDATE_CATEGORIES_FAILURE","DELETE_CATEGORIES_REQUEST","DELETE_CATEGORIES_SUCCESS","DELETE_CATEGORIES_FAILURE"],"sources":["C:/Users/User/Desktop/Final/frontend/src/reducers/category.reducer.js"],"sourcesContent":["import { categoryConstansts } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    categories: [],\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\n\r\nconst buildNewCategories = (parentId, categories, category) => {\r\n    let myCategories = [];\r\n\r\n    if(parentId === undefined){\r\n        return [\r\n            ...categories,\r\n            {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                type: category.type,\r\n                children: []\r\n            }\r\n        ];\r\n    }\r\n   \r\n    for(let cat of categories){\r\n\r\n        if(cat._id === parentId){\r\n            const newCategory = {\r\n                _id: category._id,\r\n                name: category.name,\r\n                slug: category.slug,\r\n                parentId: category.parentId,\r\n                type: category.type,\r\n                children: []\r\n            };\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n            })\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n\r\n    return myCategories;\r\n}\r\n\r\n\r\nconst categoryReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                categories: action.payload.categories\r\n            }\r\n           \r\n        case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\r\n           return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\r\n           const category = action.payload.category;\r\n           const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n           console.log('updated categoires', updatedCategories);\r\n            \r\n            return {\r\n                ...state,\r\n                categories: updatedCategories,\r\n                loading: false,\r\n            }\r\n           \r\n        case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\r\n           return {\r\n                ...initState,\r\n                loading: false,\r\n                //error: action.payload.error\r\n            }\r\n            \r\n        case categoryConstansts.UPDATE_CATEGORIES_REQUEST:\r\n          return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n           \r\n        case categoryConstansts.UPDATE_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.UPDATE_CATEGORIES_FAILURE:\r\n           return{\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_REQUEST:\r\n           return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            \r\n        case categoryConstansts.DELETE_CATEGORIES_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            };\r\n            \r\n    \r\n    default:\r\n    return state;\r\n}\r\n};\r\nexport default categoryReducer;"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,sBAAsB;AAEzD,MAAMC,SAAS,GAAG;EACdC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAGD,MAAMC,kBAAkB,GAAGA,CAACC,QAAQ,EAAEJ,UAAU,EAAEK,QAAQ,KAAK;EAC3D,IAAIC,YAAY,GAAG,EAAE;EAErB,IAAGF,QAAQ,KAAKG,SAAS,EAAC;IACtB,OAAO,CACH,GAAGP,UAAU,EACb;MACIQ,GAAG,EAAEH,QAAQ,CAACG,GAAG;MACjBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;MACnBC,IAAI,EAAEL,QAAQ,CAACK,IAAI;MACnBC,IAAI,EAAEN,QAAQ,CAACM,IAAI;MACnBC,QAAQ,EAAE;IACd,CAAC,CACJ;EACL;EAEA,KAAI,IAAIC,GAAG,IAAIb,UAAU,EAAC;IAEtB,IAAGa,GAAG,CAACL,GAAG,KAAKJ,QAAQ,EAAC;MACpB,MAAMU,WAAW,GAAG;QAChBN,GAAG,EAAEH,QAAQ,CAACG,GAAG;QACjBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;QACnBC,IAAI,EAAEL,QAAQ,CAACK,IAAI;QACnBN,QAAQ,EAAEC,QAAQ,CAACD,QAAQ;QAC3BO,IAAI,EAAEN,QAAQ,CAACM,IAAI;QACnBC,QAAQ,EAAE;MACd,CAAC;MACDN,YAAY,CAACS,IAAI,CAAC;QACd,GAAGF,GAAG;QACND,QAAQ,EAAEC,GAAG,CAACD,QAAQ,CAACI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGH,GAAG,CAACD,QAAQ,EAAEE,WAAW,CAAC,GAAG,CAACA,WAAW;MACrF,CAAC,CAAC;IACN,CAAC,MAAI;MACDR,YAAY,CAACS,IAAI,CAAC;QACd,GAAGF,GAAG;QACND,QAAQ,EAAEC,GAAG,CAACD,QAAQ,GAAGT,kBAAkB,CAACC,QAAQ,EAAES,GAAG,CAACD,QAAQ,EAAEP,QAAQ,CAAC,GAAG;MACpF,CAAC,CAAC;IACN;EAGJ;EAGA,OAAOC,YAAY;AACvB,CAAC;AAGD,MAAMW,eAAe,GAAGA,CAACC,KAAK,GAAGnB,SAAS,EAAEoB,MAAM,KAAK;EACnD,QAAOA,MAAM,CAACR,IAAI;IACd,KAAKb,kBAAkB,CAACsB,0BAA0B;MAC9C,OAAM;QACF,GAAGF,KAAK;QACRlB,UAAU,EAAEmB,MAAM,CAACE,OAAO,CAACrB;MAC/B,CAAC;IAEL,KAAKF,kBAAkB,CAACwB,wBAAwB;MAC7C,OAAO;QACF,GAAGJ,KAAK;QACRjB,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,kBAAkB,CAACyB,wBAAwB;MAC7C,MAAMlB,QAAQ,GAAGc,MAAM,CAACE,OAAO,CAAChB,QAAQ;MACxC,MAAMmB,iBAAiB,GAAGrB,kBAAkB,CAACE,QAAQ,CAACD,QAAQ,EAAEc,KAAK,CAAClB,UAAU,EAAEK,QAAQ,CAAC;MAC3FoB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,iBAAiB,CAAC;MAEnD,OAAO;QACH,GAAGN,KAAK;QACRlB,UAAU,EAAEwB,iBAAiB;QAC7BvB,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,kBAAkB,CAAC6B,wBAAwB;MAC7C,OAAO;QACF,GAAG5B,SAAS;QACZE,OAAO,EAAE;QACT;MACJ,CAAC;;IAEL,KAAKH,kBAAkB,CAAC8B,yBAAyB;MAC/C,OAAO;QACD,GAAGV,KAAK;QACRjB,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,kBAAkB,CAAC+B,yBAAyB;MAC7C,OAAO;QACH,GAAGX,KAAK;QACRjB,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,kBAAkB,CAACgC,yBAAyB;MAC9C,OAAM;QACD,GAAGZ,KAAK;QACRhB,KAAK,EAAEiB,MAAM,CAACE,OAAO,CAACnB,KAAK;QAC3BD,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,kBAAkB,CAACiC,yBAAyB;MAC9C,OAAM;QACD,GAAGb,KAAK;QACRjB,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,kBAAkB,CAACkC,yBAAyB;MAC7C,OAAO;QACH,GAAGd,KAAK;QACRjB,OAAO,EAAE;MACb,CAAC;IAEL,KAAKH,kBAAkB,CAACmC,yBAAyB;MAC7C,OAAO;QACH,GAAGf,KAAK;QACRjB,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEiB,MAAM,CAACE,OAAO,CAACnB;MAC1B,CAAC;IAGT;MACA,OAAOgB,KAAK;EAChB;AACA,CAAC;AACD,eAAeD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}