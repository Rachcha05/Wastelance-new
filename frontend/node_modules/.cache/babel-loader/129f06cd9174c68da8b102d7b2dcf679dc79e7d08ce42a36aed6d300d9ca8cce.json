{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final\\\\frontend\\\\src\\\\HOC\\\\PrivateRoute.js\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\n//we are using this private route for pages that needed login access. for any page that require login we use this private route instead of firect Rout from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    //getting props from compenents when routing to that components in App.js\n    _jsxDEV(Route, {\n      ...rest,\n      component: props => {\n        const token = window.localStorage.getItem(\"token\");\n        if (token) {\n          //if only signin token is available go to the compenent needed (that means user is signed in)\n          return /*#__PURE__*/_jsxDEV(Component, {\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 18\n          }, this);\n        } else {\n          //if signin token is unavailable rederecr the user to signin page (that means user is not signed in)\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","PrivateRoute","component","Component","rest","props","token","window","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final/frontend/src/HOC/PrivateRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n//we are using this private route for pages that needed login access. for any page that require login we use this private route instead of firect Rout from react-router-dom\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    //getting props from compenents when routing to that components in App.js\r\n    <Route\r\n      {...rest}\r\n      component={(props) => {\r\n        const token = window.localStorage.getItem(\"token\");\r\n\r\n        if (token) {\r\n          //if only signin token is available go to the compenent needed (that means user is signed in)\r\n          return <Component {...props} />;\r\n        } else {\r\n          //if signin token is unavailable rederecr the user to signin page (that means user is not signed in)\r\n          return <Redirect to={\"/signin\"} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC1D;IAAA;IACE;IACAJ,OAAA,CAACH,KAAK;MAAA,GACAO,IAAI;MACRF,SAAS,EAAGG,KAAK,IAAK;QACpB,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAElD,IAAIH,KAAK,EAAE;UACT;UACA,oBAAON,OAAA,CAACG,SAAS;YAAA,GAAKE;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QACjC,CAAC,MAAM;UACL;UACA,oBAAOb,OAAA,CAACF,QAAQ;YAACgB,EAAE,EAAE;UAAU;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QACpC;MACF;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;AAEN,CAAC;AAACE,EAAA,GAlBId,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}