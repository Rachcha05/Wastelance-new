{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\User\\\\Desktop\\\\Final\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"C:\\\\Users\\\\User\\\\Desktop\\\\Final\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { inventoryConstants } from \"../actions/constants\";\nvar initState = {\n  inventory: [],\n  loading: false,\n  error: null\n};\nvar buildNewInventory = function buildNewInventory(inventory, inventoryOne) {\n  return [].concat(_toConsumableArray(inventory), [{\n    _id: inventoryOne._id,\n    name: inventoryOne.name,\n    qty: inventoryOne.qty,\n    description: inventoryOne.description\n  }]);\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case inventoryConstants.ADD_INVENTORY_REQUEST:\n      state = _objectSpread({}, state, {\n        loading: true\n      });\n      break;\n    case inventoryConstants.ADD_INVENTORY_SUCCESS:\n      var inventoryOne = action.payload.inventory;\n      var updatedInventories = buildNewInventory(state.inventory, inventoryOne);\n      state = _objectSpread({}, state, {\n        inventory: updatedInventories,\n        loading: false\n      });\n      break;\n    case inventoryConstants.ADD_INVENTORY_FAILURE:\n      state = _objectSpread({}, initState, {\n        loading: false,\n        error: action.payload.error\n      });\n      break;\n    case inventoryConstants.DELETE_INVENTORY_REQUEST:\n      state = _objectSpread({}, state, {\n        loading: true\n      });\n      break;\n    case inventoryConstants.DELETE_INVENTORY_SUCCESS:\n      state = _objectSpread({}, state, {\n        loading: false\n      });\n      break;\n    case inventoryConstants.DELETE_INVENTORY_FAILURE:\n      state = _objectSpread({}, state, {\n        error: action.payload.error,\n        loading: false\n      });\n      break;\n    case inventoryConstants.GET_INVENTORY_SUCCESS:\n      state = _objectSpread({}, state, {\n        inventory: action.payload.inventory,\n        loading: false\n      });\n      break;\n    case inventoryConstants.GET_INVENTORY_REQUEST:\n      state = _objectSpread({}, state, {\n        loading: true\n      });\n      break;\n    case inventoryConstants.GET_INVENTORY_FAILURE:\n      state = _objectSpread({}, initState, {\n        loading: false,\n        error: action.payload.error\n      });\n      break;\n  }\n  return state;\n});","map":{"version":3,"names":["inventoryConstants","initState","inventory","loading","error","buildNewInventory","inventoryOne","concat","_toConsumableArray","_id","name","qty","description","state","arguments","length","undefined","action","type","ADD_INVENTORY_REQUEST","_objectSpread","ADD_INVENTORY_SUCCESS","payload","updatedInventories","ADD_INVENTORY_FAILURE","DELETE_INVENTORY_REQUEST","DELETE_INVENTORY_SUCCESS","DELETE_INVENTORY_FAILURE","GET_INVENTORY_SUCCESS","GET_INVENTORY_REQUEST","GET_INVENTORY_FAILURE"],"sources":["C:/Users/User/Desktop/Final/frontend/src/reducers/inventory.reducer.js"],"sourcesContent":["import { inventoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  inventory: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nconst buildNewInventory = (inventory, inventoryOne) => {\r\n  return [\r\n    ...inventory,\r\n    {\r\n      _id: inventoryOne._id,\r\n      name: inventoryOne.name,\r\n      qty: inventoryOne.qty,\r\n      description: inventoryOne.description,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case inventoryConstants.ADD_INVENTORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case inventoryConstants.ADD_INVENTORY_SUCCESS:\r\n      const inventoryOne = action.payload.inventory;\r\n      const updatedInventories = buildNewInventory(\r\n        state.inventory,\r\n        inventoryOne\r\n      );\r\n\r\n      state = {\r\n        ...state,\r\n        inventory: updatedInventories,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case inventoryConstants.ADD_INVENTORY_FAILURE:\r\n      state = {\r\n        ...initState,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case inventoryConstants.DELETE_INVENTORY_REQUEST:\r\n      state = { ...state, loading: true };\r\n      break;\r\n    case inventoryConstants.DELETE_INVENTORY_SUCCESS:\r\n      state = { ...state, loading: false };\r\n      break;\r\n    case inventoryConstants.DELETE_INVENTORY_FAILURE:\r\n      state = { ...state, error: action.payload.error, loading: false };\r\n      break;\r\n    case inventoryConstants.GET_INVENTORY_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        inventory: action.payload.inventory,\r\n        loading: false,\r\n      };\r\n      break;\r\n\r\n    case inventoryConstants.GET_INVENTORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n\r\n    case inventoryConstants.GET_INVENTORY_FAILURE:\r\n      state = {\r\n        ...initState,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,sBAAsB;AAEzD,IAAMC,SAAS,GAAG;EAChBC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIH,SAAS,EAAEI,YAAY,EAAK;EACrD,UAAAC,MAAA,CAAAC,kBAAA,CACKN,SAAS,IACZ;IACEO,GAAG,EAAEH,YAAY,CAACG,GAAG;IACrBC,IAAI,EAAEJ,YAAY,CAACI,IAAI;IACvBC,GAAG,EAAEL,YAAY,CAACK,GAAG;IACrBC,WAAW,EAAEN,YAAY,CAACM;EAC5B,CAAC;AAEL,CAAC;AAED,gBAAe,YAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGb,SAAS;EAAA,IAAEgB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvC,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKlB,kBAAkB,CAACmB,qBAAqB;MAC3CN,KAAK,GAAAO,aAAA,KACAP,KAAK;QACRV,OAAO,EAAE;MAAI,EACd;MACD;IACF,KAAKH,kBAAkB,CAACqB,qBAAqB;MAC3C,IAAMf,YAAY,GAAGW,MAAM,CAACK,OAAO,CAACpB,SAAS;MAC7C,IAAMqB,kBAAkB,GAAGlB,iBAAiB,CAC1CQ,KAAK,CAACX,SAAS,EACfI,YACF,CAAC;MAEDO,KAAK,GAAAO,aAAA,KACAP,KAAK;QACRX,SAAS,EAAEqB,kBAAkB;QAC7BpB,OAAO,EAAE;MAAK,EACf;MACD;IACF,KAAKH,kBAAkB,CAACwB,qBAAqB;MAC3CX,KAAK,GAAAO,aAAA,KACAnB,SAAS;QACZE,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEa,MAAM,CAACK,OAAO,CAAClB;MAAK,EAC5B;MACD;IACF,KAAKJ,kBAAkB,CAACyB,wBAAwB;MAC9CZ,KAAK,GAAAO,aAAA,KAAQP,KAAK;QAAEV,OAAO,EAAE;MAAI,EAAE;MACnC;IACF,KAAKH,kBAAkB,CAAC0B,wBAAwB;MAC9Cb,KAAK,GAAAO,aAAA,KAAQP,KAAK;QAAEV,OAAO,EAAE;MAAK,EAAE;MACpC;IACF,KAAKH,kBAAkB,CAAC2B,wBAAwB;MAC9Cd,KAAK,GAAAO,aAAA,KAAQP,KAAK;QAAET,KAAK,EAAEa,MAAM,CAACK,OAAO,CAAClB,KAAK;QAAED,OAAO,EAAE;MAAK,EAAE;MACjE;IACF,KAAKH,kBAAkB,CAAC4B,qBAAqB;MAC3Cf,KAAK,GAAAO,aAAA,KACAP,KAAK;QACRX,SAAS,EAAEe,MAAM,CAACK,OAAO,CAACpB,SAAS;QACnCC,OAAO,EAAE;MAAK,EACf;MACD;IAEF,KAAKH,kBAAkB,CAAC6B,qBAAqB;MAC3ChB,KAAK,GAAAO,aAAA,KACAP,KAAK;QACRV,OAAO,EAAE;MAAI,EACd;MACD;IAEF,KAAKH,kBAAkB,CAAC8B,qBAAqB;MAC3CjB,KAAK,GAAAO,aAAA,KACAnB,SAAS;QACZE,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEa,MAAM,CAACK,OAAO,CAAClB;MAAK,EAC5B;MACD;EACJ;EACA,OAAOS,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module"}