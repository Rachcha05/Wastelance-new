{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Final\\\\frontend\\\\src\\\\containers\\\\Products\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Layout from \"../../components/Layouts\";\nimport { Container, Row, Col, Button, Table, Carousel, ButtonGroup } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Input from \"../../components/UI/Input\";\nimport { addProduct, updateProduct, deleteProduct } from \"../../actions\";\nimport CurrencyFormat from \"react-currency-format\";\nimport NewModal from \"../../components/UI/Modal\";\nimport { generatePublicUrl } from \"../../urlConfig\";\nimport \"./style.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Products(props) {\n  _s();\n  const [productName, setProductName] = useState(\"\");\n  const [productPrice, setProductPrice] = useState(\"\");\n  const [productQty, setProductQty] = useState(\"\");\n  const [productDescription, setProductDescription] = useState(\"\");\n  const [productOffer, setProductOffer] = useState(\"\");\n  const [productCategory, setProductCategory] = useState(\"\");\n  const [productImage, setProductImage] = useState([]);\n  const [productDetailsModal, setProductDetailsModal] = useState(false);\n  const [productDetails, setProductDetails] = useState(null);\n  const [deleteProductModal, setDeleteProductModal] = useState(false);\n  const [currentProduct, setCurrentProduct] = useState({});\n  const [updateProductModal, setUpdateProductModal] = useState(false);\n  const [productIdUpdate, setProductIdUpdate] = useState(\"\");\n  const [productNameUpdate, setProductNameUpdate] = useState(\"\");\n  const [productPriceUpdate, setProductPriceUpdate] = useState(\"\");\n  const [productQtyUpdate, setProductQtyUpdate] = useState(\"\");\n  const [productDescriptionUpdate, setProductDescriptionUpdate] = useState(\"\");\n  const [productOfferUpdate, setProductOfferUpdate] = useState(\"\");\n  const [productCategoryUpdate, setProductCategoryUpdate] = useState({});\n  const [productImageUpdate, setProductImageUpdate] = useState([]);\n  const category = useSelector(state => state.category);\n  const product = useSelector(state => state.product);\n  const dispatch = useDispatch();\n\n  /*  useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  }, []); */\n\n  const [show, setShow] = useState(false);\n\n  //product is loading display loading spinner\n  if (product.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border text-primary\",\n      role: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  const addNewProduct = () => {\n    const form = new FormData();\n\n    //validations of data\n    if (productName === \"\") {\n      toast.error(\"Name can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productPrice === \"\") {\n      toast.error(\"Price can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (isNaN(productPrice)) {\n      toast.error(\"Price must be a number!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productQty === \"\") {\n      toast.error(\"Quantity can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (isNaN(productQty)) {\n      toast.error(\"Quantity must be a number!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productDescription === \"\") {\n      toast.error(\"Description can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productOffer === \"\") {\n      toast.error(\"Offer can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (isNaN(productOffer)) {\n      toast.error(\"Offer must be a number!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (!productCategory) {\n      toast.error(\"Category can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productImage.length < 0) {\n      toast.error(\"Product images can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    form.append(\"name\", productName);\n    form.append(\"price\", productPrice);\n    form.append(\"offer\", productOffer);\n    form.append(\"category\", productCategory);\n    form.append(\"quantity\", productQty);\n    form.append(\"description\", productDescription);\n    for (let pic of productImage) {\n      form.append(\"productImages\", pic);\n    }\n    dispatch(addProduct(form));\n    setProductName(\"\");\n    setProductPrice(\"\");\n    setProductOffer(\"\");\n    setProductCategory(\"\");\n    setProductQty(\"\");\n    setProductDescription(\"\");\n    setProductImage([]);\n    //window.location.reload();\n  };\n\n  const handleClose = () => {\n    setShow(false);\n  };\n  const handleShow = () => setShow(true);\n  const handleProductImage = e => {\n    setProductImage([...productImage, e.target.files[0]]);\n  };\n\n  //handling selected product image in product updating\n  const handleProductImageUpdate = e => {\n    setProductImageUpdate(e.target.files[0]);\n  };\n\n  //updating the state after selecting product data to update\n  const updateProductData = prod => {\n    setUpdateProductModal(true);\n    console.log(prod._id);\n\n    //updating state value according to selected Product\n    setProductIdUpdate(prod._id);\n    setProductNameUpdate(prod.name);\n    setProductDescriptionUpdate(prod.description);\n    setProductQtyUpdate(prod.quantity);\n    setProductOfferUpdate(prod.offer);\n    setProductPriceUpdate(prod.price);\n    setProductOfferUpdate(prod.offer);\n    setProductCategoryUpdate(prod.category);\n    prod.productImages.map(picture => setProductImageUpdate(picture.img));\n  };\n\n  //handling the data added to form when updating the Product and passing them to updateProduct() in actions\n  const updateProductForm = () => {\n    const form = new FormData();\n\n    //validations of data\n    if (productNameUpdate === \"\") {\n      toast.error(\"Name can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productPriceUpdate === \"\") {\n      toast.error(\"Price can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (isNaN(productPriceUpdate)) {\n      toast.error(\"Price must be a number!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productQtyUpdate === \"\") {\n      toast.error(\"Quantity can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (isNaN(productQtyUpdate)) {\n      toast.error(\"Quantity must be a number!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productDescriptionUpdate === \"\") {\n      toast.error(\"Description can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productOfferUpdate === \"\") {\n      toast.error(\"Offer can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (isNaN(productOfferUpdate)) {\n      toast.error(\"Offer must be a number!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (!productCategoryUpdate) {\n      toast.error(\"Category can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    if (productImageUpdate.length < 0) {\n      toast.error(\"Product images can't be empty!\", {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined\n      });\n      return;\n    }\n    form.append(\"_id\", productIdUpdate);\n    form.append(\"name\", productNameUpdate);\n    form.append(\"description\", productDescriptionUpdate);\n    form.append(\"productImages\", productImageUpdate);\n    form.append(\"offer\", productOfferUpdate);\n    form.append(\"quantity\", productQtyUpdate);\n    form.append(\"price\", productPriceUpdate);\n    form.append(\"category\", productCategoryUpdate._id);\n\n    //updating the product with new form data and then updating the product list(getting the updated product list)\n    dispatch(updateProduct(form));\n  };\n  console.log(productImage);\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name\n      });\n    }\n    return options;\n  };\n  const renderProducts = () => {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      responsive: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"text-center\",\n        children: product.products.length > 0 ? product.products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                maxWidth: \"100px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Carousel, {\n                fade: true,\n                children: product.productImages.map(picture => /*#__PURE__*/_jsxDEV(Carousel.Item, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"productImageContainer\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: generatePublicUrl(picture.img),\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 414,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(CurrencyFormat, {\n              value: product.price,\n              displayType: \"text\",\n              thousandSeparator: true,\n              prefix: \"Rs. \",\n              suffix: \".00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n              style: {\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                onClick: () => {\n                  updateProductData(product);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => {\n                  setDeleteProductModal(true);\n                  setCurrentProduct(product);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: \"100%\"\n              },\n              size: \"sm\",\n              onClick: () => {\n                showProductDetailsModal(product);\n              },\n              children: \"Show Full Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 19\n          }, this)]\n        }, product._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this);\n  };\n\n  //showing updateproduct modal popup\n  const renderUpdateProductsModal = () => {\n    return /*#__PURE__*/_jsxDEV(NewModal, {\n      show: updateProductModal,\n      handleClose: () => {\n        setUpdateProductModal(false);\n      },\n      addNewItem: updateProductForm,\n      modalTitle: \"Edit Product\",\n      size: \"lg\",\n      cat: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Name\",\n        type: \"text\",\n        value: productNameUpdate,\n        placeholder: \"Product Name\",\n        onChange: e => {\n          setProductNameUpdate(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Price\",\n        type: \"text\",\n        value: productPriceUpdate,\n        placeholder: \"Product Price\",\n        onChange: e => {\n          setProductPriceUpdate(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Quantity\",\n        type: \"text\",\n        value: productQtyUpdate,\n        placeholder: \"Product Quantity\",\n        onChange: e => {\n          setProductQtyUpdate(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Description\",\n        as: \"textarea\",\n        rows: 3,\n        value: productDescriptionUpdate,\n        placeholder: \"Product Description\",\n        onChange: e => {\n          setProductDescriptionUpdate(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Offer\",\n        type: \"text\",\n        value: productOfferUpdate,\n        placeholder: \"Product Offer\",\n        onChange: e => {\n          setProductOfferUpdate(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: productCategoryUpdate._id,\n        onChange: e => {\n          setProductCategoryUpdate(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: productCategoryUpdate.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-group-text\",\n          htmlFor: \"inputGroupFile01\",\n          children: \"Upload Product Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"productImageUpdate\",\n          className: \"form-control\",\n          id: \"inputGroupFile01\",\n          onChange: handleProductImageUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: typeof productImageUpdate === \"string\" ? /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: \"#333\"\n              },\n              children: [\"Current Image Name: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 39\n              }, this), \" \", productImageUpdate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                color: \"#333\"\n              },\n              children: \"Current Image Preview:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                maxWidth: \"100px\"\n              },\n              src: generatePublicUrl(productImageUpdate),\n              alt: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this);\n  };\n\n  //fuction to delete product. dispatching the deleteproduct() from actions\n  const deleteProductData = pro => {\n    //dispatching the action to delete selected Product\n    dispatch(deleteProduct(pro._id));\n  };\n\n  //popup modal to delete product\n  const renderDeleteProductModal = () => {\n    return /*#__PURE__*/_jsxDEV(NewModal, {\n      modalTitle: \"Please Confirm!\",\n      variant: \"danger\",\n      clsBtnName: \"No\",\n      saveBtnName: \"Yes\",\n      addNewItem: () => deleteProductData(currentProduct),\n      show: deleteProductModal,\n      handleClose: () => {\n        setDeleteProductModal(false);\n      },\n      children: `Do you want to delete \"${currentProduct.name}\" product?`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this);\n  };\n  const renderAddProductModal = () => {\n    return /*#__PURE__*/_jsxDEV(NewModal, {\n      modalTitle: \"Add New Product\",\n      show: show,\n      handleClose: handleClose,\n      addNewItem: addNewProduct,\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Name\",\n        type: \"text\",\n        value: productName,\n        placeholder: \"Product Name\",\n        onChange: e => {\n          setProductName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Price\",\n        type: \"text\",\n        value: productPrice,\n        placeholder: \"Product Price\",\n        onChange: e => {\n          setProductPrice(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Quantity\",\n        type: \"text\",\n        value: productQty,\n        placeholder: \"Product Quantity\",\n        onChange: e => {\n          setProductQty(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Description\",\n        as: \"textarea\",\n        rows: 3,\n        value: productDescription,\n        placeholder: \"Product Description\",\n        onChange: e => {\n          setProductDescription(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        lable: \"Product Offer\",\n        type: \"text\",\n        value: productOffer,\n        placeholder: \"Product Offer\",\n        onChange: e => {\n          setProductOffer(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Product Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: productCategory,\n        onChange: e => {\n          setProductCategory(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), productImage.length > 0 ? productImage.map((pic, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: pic.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 46\n      }, this)) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-group-text\",\n          htmlFor: \"inputGroupFile01\",\n          children: \"Upload Product Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"productImage\",\n          className: \"form-control\",\n          id: \"inputGroupFile01\",\n          onChange: handleProductImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCloseProductDetailsModal = () => {\n    setProductDetailsModal(false);\n  };\n  const showProductDetailsModal = product => {\n    setProductDetails(product);\n    setProductDetailsModal(true);\n    //console.log(product);\n  };\n\n  const renderProductDetailsModal = () => {\n    if (!productDetails) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(NewModal, {\n      modalTitle: \"Product Details\",\n      show: productDetailsModal,\n      handleClose: handleCloseProductDetailsModal,\n      size: \"lg\",\n      hiddenAddBtn: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: productDetails._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: productDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: productDetails.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: productDetails.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: productDetails.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Offer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: productDetails.offer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: productDetails.category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Added By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"value\",\n            children: [productDetails.createdBy.firstName, \"\\xA0\", productDetails.createdBy.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(\"lable\", {\n            className: \"key\",\n            children: \"Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: productDetails.productImages.map(picture => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"productImageContainer\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: generatePublicUrl(picture.img),\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              onClick: handleShow,\n              style: {\n                marginTop: \"5px\"\n              },\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: renderProducts()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 7\n    }, this), renderAddProductModal(), renderProductDetailsModal(), renderDeleteProductModal(), renderUpdateProductsModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 777,\n    columnNumber: 5\n  }, this);\n}\n_s(Products, \"l04dMqtLkDgUGa2O78vKIqBSGBk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Products;\nexport default Products;\n\n/* import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addProduct, deleteProductById } from \"../../actions\";\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Products\r\n **/\n\n/* const Products = (props) => {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    \r\n  }\r\n\r\n    const submitProductForm = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n\r\n    dispatch(addProduct(form)).then(() => setShow(false));\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>2</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>{product.category.name}</td>\r\n                  <td>\r\n                    <button onClick={() => showProductDetailsModal(product)}>\r\n                      info\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          productId: product._id,\r\n                        };\r\n                        dispatch(deleteProductById(payload));\r\n                      }}\r\n                    >\r\n                      del\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Product\"}\r\n        onSubmit={submitProductForm}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n        <input\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={productDetailModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        modalTitle={\"Product Details\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Product Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productPictures.map((picture) => (\r\n                <div className=\"productImgContainer\">\r\n                  <img src={picture.img} alt=\"\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Products; */\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","Layout","Container","Row","Col","Button","Table","Carousel","ButtonGroup","useDispatch","useSelector","Input","addProduct","updateProduct","deleteProduct","CurrencyFormat","NewModal","generatePublicUrl","ToastContainer","toast","jsxDEV","_jsxDEV","Products","props","_s","productName","setProductName","productPrice","setProductPrice","productQty","setProductQty","productDescription","setProductDescription","productOffer","setProductOffer","productCategory","setProductCategory","productImage","setProductImage","productDetailsModal","setProductDetailsModal","productDetails","setProductDetails","deleteProductModal","setDeleteProductModal","currentProduct","setCurrentProduct","updateProductModal","setUpdateProductModal","productIdUpdate","setProductIdUpdate","productNameUpdate","setProductNameUpdate","productPriceUpdate","setProductPriceUpdate","productQtyUpdate","setProductQtyUpdate","productDescriptionUpdate","setProductDescriptionUpdate","productOfferUpdate","setProductOfferUpdate","productCategoryUpdate","setProductCategoryUpdate","productImageUpdate","setProductImageUpdate","category","state","product","dispatch","show","setShow","loading","className","role","fileName","_jsxFileName","lineNumber","columnNumber","addNewProduct","form","FormData","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","isNaN","length","append","pic","handleClose","handleShow","handleProductImage","e","target","files","handleProductImageUpdate","updateProductData","prod","console","log","_id","name","description","quantity","offer","price","productImages","map","picture","img","updateProductForm","createCategoryList","categories","options","push","value","renderProducts","responsive","children","products","style","maxWidth","fade","Item","src","alt","displayType","thousandSeparator","prefix","suffix","width","variant","onClick","size","showProductDetailsModal","renderUpdateProductsModal","addNewItem","modalTitle","cat","lable","type","placeholder","onChange","as","rows","option","htmlFor","id","color","deleteProductData","pro","renderDeleteProductModal","clsBtnName","saveBtnName","renderAddProductModal","index","handleCloseProductDetailsModal","renderProductDetailsModal","hiddenAddBtn","md","createdBy","firstName","lastName","display","sidebar","justifyContent","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Final/frontend/src/containers/Products/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layouts\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Table,\r\n  Carousel,\r\n  ButtonGroup,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { addProduct, updateProduct, deleteProduct } from \"../../actions\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport NewModal from \"../../components/UI/Modal\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport \"./style.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Products(props) {\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [productQty, setProductQty] = useState(\"\");\r\n  const [productDescription, setProductDescription] = useState(\"\");\r\n  const [productOffer, setProductOffer] = useState(\"\");\r\n  const [productCategory, setProductCategory] = useState(\"\");\r\n  const [productImage, setProductImage] = useState([]);\r\n  const [productDetailsModal, setProductDetailsModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const [deleteProductModal, setDeleteProductModal] = useState(false);\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n  const [updateProductModal, setUpdateProductModal] = useState(false);\r\n\r\n  const [productIdUpdate, setProductIdUpdate] = useState(\"\");\r\n  const [productNameUpdate, setProductNameUpdate] = useState(\"\");\r\n  const [productPriceUpdate, setProductPriceUpdate] = useState(\"\");\r\n  const [productQtyUpdate, setProductQtyUpdate] = useState(\"\");\r\n  const [productDescriptionUpdate, setProductDescriptionUpdate] = useState(\"\");\r\n  const [productOfferUpdate, setProductOfferUpdate] = useState(\"\");\r\n  const [productCategoryUpdate, setProductCategoryUpdate] = useState({});\r\n  const [productImageUpdate, setProductImageUpdate] = useState([]);\r\n\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /*  useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  }, []); */\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  //product is loading display loading spinner\r\n  if (product.loading) {\r\n    return <div className=\"spinner-border text-primary\" role=\"status\"></div>;\r\n  }\r\n\r\n  const addNewProduct = () => {\r\n    const form = new FormData();\r\n\r\n    //validations of data\r\n    if (productName === \"\") {\r\n      toast.error(\"Name can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productPrice === \"\") {\r\n      toast.error(\"Price can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (isNaN(productPrice)) {\r\n      toast.error(\"Price must be a number!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productQty === \"\") {\r\n      toast.error(\"Quantity can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (isNaN(productQty)) {\r\n      toast.error(\"Quantity must be a number!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productDescription === \"\") {\r\n      toast.error(\"Description can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productOffer === \"\") {\r\n      toast.error(\"Offer can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (isNaN(productOffer)) {\r\n      toast.error(\"Offer must be a number!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (!productCategory) {\r\n      toast.error(\"Category can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productImage.length < 0) {\r\n      toast.error(\"Product images can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    form.append(\"name\", productName);\r\n    form.append(\"price\", productPrice);\r\n    form.append(\"offer\", productOffer);\r\n    form.append(\"category\", productCategory);\r\n    form.append(\"quantity\", productQty);\r\n    form.append(\"description\", productDescription);\r\n\r\n    for (let pic of productImage) {\r\n      form.append(\"productImages\", pic);\r\n    }\r\n\r\n    dispatch(addProduct(form));\r\n\r\n    setProductName(\"\");\r\n    setProductPrice(\"\");\r\n    setProductOffer(\"\");\r\n    setProductCategory(\"\");\r\n    setProductQty(\"\");\r\n    setProductDescription(\"\");\r\n    setProductImage([]);\r\n    //window.location.reload();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleProductImage = (e) => {\r\n    setProductImage([...productImage, e.target.files[0]]);\r\n  };\r\n\r\n  //handling selected product image in product updating\r\n  const handleProductImageUpdate = (e) => {\r\n    setProductImageUpdate(e.target.files[0]);\r\n  };\r\n\r\n  //updating the state after selecting product data to update\r\n  const updateProductData = (prod) => {\r\n    setUpdateProductModal(true);\r\n\r\n    console.log(prod._id);\r\n\r\n    //updating state value according to selected Product\r\n    setProductIdUpdate(prod._id);\r\n    setProductNameUpdate(prod.name);\r\n    setProductDescriptionUpdate(prod.description);\r\n    setProductQtyUpdate(prod.quantity);\r\n    setProductOfferUpdate(prod.offer);\r\n    setProductPriceUpdate(prod.price);\r\n    setProductOfferUpdate(prod.offer);\r\n    setProductCategoryUpdate(prod.category);\r\n\r\n    prod.productImages.map((picture) => setProductImageUpdate(picture.img));\r\n  };\r\n\r\n  //handling the data added to form when updating the Product and passing them to updateProduct() in actions\r\n  const updateProductForm = () => {\r\n    const form = new FormData();\r\n\r\n    //validations of data\r\n    if (productNameUpdate === \"\") {\r\n      toast.error(\"Name can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productPriceUpdate === \"\") {\r\n      toast.error(\"Price can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (isNaN(productPriceUpdate)) {\r\n      toast.error(\"Price must be a number!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productQtyUpdate === \"\") {\r\n      toast.error(\"Quantity can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (isNaN(productQtyUpdate)) {\r\n      toast.error(\"Quantity must be a number!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productDescriptionUpdate === \"\") {\r\n      toast.error(\"Description can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productOfferUpdate === \"\") {\r\n      toast.error(\"Offer can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (isNaN(productOfferUpdate)) {\r\n      toast.error(\"Offer must be a number!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (!productCategoryUpdate) {\r\n      toast.error(\"Category can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n    if (productImageUpdate.length < 0) {\r\n      toast.error(\"Product images can't be empty!\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    form.append(\"_id\", productIdUpdate);\r\n    form.append(\"name\", productNameUpdate);\r\n    form.append(\"description\", productDescriptionUpdate);\r\n    form.append(\"productImages\", productImageUpdate);\r\n    form.append(\"offer\", productOfferUpdate);\r\n    form.append(\"quantity\", productQtyUpdate);\r\n    form.append(\"price\", productPriceUpdate);\r\n    form.append(\"category\", productCategoryUpdate._id);\r\n\r\n    //updating the product with new form data and then updating the product list(getting the updated product list)\r\n    dispatch(updateProduct(form));\r\n  };\r\n\r\n  console.log(productImage);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n    }\r\n    return options;\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table responsive=\"sm\">\r\n        <thead className=\"text-center\">\r\n          <tr>\r\n            <th>Image</th>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>Price</th>\r\n\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"text-center\">\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>\r\n                    <div style={{ maxWidth: \"100px\" }}>\r\n                      <Carousel fade>\r\n                        {product.productImages.map((picture) => (\r\n                          <Carousel.Item>\r\n                            <div className=\"productImageContainer\">\r\n                              <img\r\n                                src={generatePublicUrl(picture.img)}\r\n                                alt=\"\"\r\n                              />\r\n                            </div>\r\n                          </Carousel.Item>\r\n                        ))}\r\n                      </Carousel>\r\n                    </div>\r\n                  </td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.description}</td>\r\n                  <td>\r\n                    {\r\n                      <CurrencyFormat\r\n                        value={product.price}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"Rs. \"}\r\n                        suffix={\".00\"}\r\n                      />\r\n                    }\r\n                  </td>\r\n\r\n                  <td>{product.category.name}</td>\r\n                  <td>\r\n                    <ButtonGroup style={{ width: \"100%\" }}>\r\n                      <Button\r\n                        variant=\"success\"\r\n                        onClick={() => {\r\n                          updateProductData(product);\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"danger\"\r\n                        onClick={() => {\r\n                          setDeleteProductModal(true);\r\n                          setCurrentProduct(product);\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </ButtonGroup>\r\n                    <Button\r\n                      style={{ width: \"100%\" }}\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        showProductDetailsModal(product);\r\n                      }}\r\n                    >\r\n                      Show Full Details\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  //showing updateproduct modal popup\r\n  const renderUpdateProductsModal = () => {\r\n    return (\r\n      <NewModal\r\n        show={updateProductModal}\r\n        handleClose={() => {\r\n          setUpdateProductModal(false);\r\n        }}\r\n        addNewItem={updateProductForm}\r\n        modalTitle=\"Edit Product\"\r\n        size=\"lg\"\r\n        cat={true}\r\n      >\r\n        <Input\r\n          lable=\"Product Name\"\r\n          type={\"text\"}\r\n          value={productNameUpdate}\r\n          placeholder={\"Product Name\"}\r\n          onChange={(e) => {\r\n            setProductNameUpdate(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Price\"\r\n          type={\"text\"}\r\n          value={productPriceUpdate}\r\n          placeholder={\"Product Price\"}\r\n          onChange={(e) => {\r\n            setProductPriceUpdate(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Quantity\"\r\n          type={\"text\"}\r\n          value={productQtyUpdate}\r\n          placeholder={\"Product Quantity\"}\r\n          onChange={(e) => {\r\n            setProductQtyUpdate(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Description\"\r\n          as=\"textarea\"\r\n          rows={3}\r\n          value={productDescriptionUpdate}\r\n          placeholder={\"Product Description\"}\r\n          onChange={(e) => {\r\n            setProductDescriptionUpdate(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Offer\"\r\n          type={\"text\"}\r\n          value={productOfferUpdate}\r\n          placeholder={\"Product Offer\"}\r\n          onChange={(e) => {\r\n            setProductOfferUpdate(e.target.value);\r\n          }}\r\n        />\r\n        <label>Product Category</label>\r\n        <select\r\n          className=\"form-control\"\r\n          value={productCategoryUpdate._id}\r\n          onChange={(e) => {\r\n            setProductCategoryUpdate(e.target.value);\r\n          }}\r\n        >\r\n          <option>{productCategoryUpdate.name}</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n        <div className=\"input-group mb-3\">\r\n          <label className=\"input-group-text\" htmlFor=\"inputGroupFile01\">\r\n            Upload Product Image\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"productImageUpdate\"\r\n            className=\"form-control\"\r\n            id=\"inputGroupFile01\"\r\n            onChange={handleProductImageUpdate}\r\n          />\r\n        </div>\r\n        <div>\r\n          {typeof productImageUpdate === \"string\" ? (\r\n            <Row>\r\n              <Col>\r\n                <label style={{ color: \"#333\" }}>\r\n                  Current Image Name: <br></br> {productImageUpdate}\r\n                </label>\r\n              </Col>\r\n              <Col>\r\n                <label style={{ color: \"#333\" }}>Current Image Preview:</label>\r\n                <br></br>\r\n                <img\r\n                  style={{ maxWidth: \"100px\" }}\r\n                  src={generatePublicUrl(productImageUpdate)}\r\n                  alt=\"Category\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          ) : null}\r\n        </div>\r\n      </NewModal>\r\n    );\r\n  };\r\n\r\n  //fuction to delete product. dispatching the deleteproduct() from actions\r\n  const deleteProductData = (pro) => {\r\n    //dispatching the action to delete selected Product\r\n    dispatch(deleteProduct(pro._id));\r\n  };\r\n\r\n  //popup modal to delete product\r\n  const renderDeleteProductModal = () => {\r\n    return (\r\n      <NewModal\r\n        modalTitle=\"Please Confirm!\"\r\n        variant=\"danger\"\r\n        clsBtnName=\"No\"\r\n        saveBtnName=\"Yes\"\r\n        addNewItem={() => deleteProductData(currentProduct)}\r\n        show={deleteProductModal}\r\n        handleClose={() => {\r\n          setDeleteProductModal(false);\r\n        }}\r\n      >{`Do you want to delete \"${currentProduct.name}\" product?`}</NewModal>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <NewModal\r\n        modalTitle={\"Add New Product\"}\r\n        show={show}\r\n        handleClose={handleClose}\r\n        addNewItem={addNewProduct}\r\n        size=\"lg\"\r\n      >\r\n        <Input\r\n          lable=\"Product Name\"\r\n          type={\"text\"}\r\n          value={productName}\r\n          placeholder={\"Product Name\"}\r\n          onChange={(e) => {\r\n            setProductName(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Price\"\r\n          type={\"text\"}\r\n          value={productPrice}\r\n          placeholder={\"Product Price\"}\r\n          onChange={(e) => {\r\n            setProductPrice(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Quantity\"\r\n          type={\"text\"}\r\n          value={productQty}\r\n          placeholder={\"Product Quantity\"}\r\n          onChange={(e) => {\r\n            setProductQty(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Description\"\r\n          as=\"textarea\"\r\n          rows={3}\r\n          value={productDescription}\r\n          placeholder={\"Product Description\"}\r\n          onChange={(e) => {\r\n            setProductDescription(e.target.value);\r\n          }}\r\n        />\r\n        <Input\r\n          lable=\"Product Offer\"\r\n          type={\"text\"}\r\n          value={productOffer}\r\n          placeholder={\"Product Offer\"}\r\n          onChange={(e) => {\r\n            setProductOffer(e.target.value);\r\n          }}\r\n        />\r\n        <label>Product Category</label>\r\n        <select\r\n          className=\"form-control\"\r\n          value={productCategory}\r\n          onChange={(e) => {\r\n            setProductCategory(e.target.value);\r\n          }}\r\n        >\r\n          <option>Select Category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br></br>\r\n        {productImage.length > 0\r\n          ? productImage.map((pic, index) => <div key={index}>{pic.name}</div>)\r\n          : null}\r\n\r\n        <div className=\"input-group mb-3\">\r\n          <label className=\"input-group-text\" htmlFor=\"inputGroupFile01\">\r\n            Upload Product Images\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            name=\"productImage\"\r\n            className=\"form-control\"\r\n            id=\"inputGroupFile01\"\r\n            onChange={handleProductImage}\r\n          />\r\n        </div>\r\n      </NewModal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailsModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailsModal(true);\r\n    //console.log(product);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <NewModal\r\n        modalTitle={\"Product Details\"}\r\n        show={productDetailsModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        size=\"lg\"\r\n        hiddenAddBtn={true}\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Id</lable>\r\n            <p className=\"value\">{productDetails._id}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Name</lable>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Price</lable>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Quantity</lable>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Description</lable>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Offer</lable>\r\n            <p className=\"value\">{productDetails.offer}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Category</lable>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Added By</lable>\r\n            <p className=\"value\">\r\n              {productDetails.createdBy.firstName}&nbsp;\r\n              {productDetails.createdBy.lastName}\r\n            </p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <lable className=\"key\">Images</lable>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productImages.map((picture) => (\r\n                <div className=\"productImageContainer\">\r\n                  <img src={generatePublicUrl(picture.img)} alt=\"\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </NewModal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <ToastContainer />\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <Button\r\n                variant=\"dark\"\r\n                onClick={handleShow}\r\n                style={{ marginTop: \"5px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n      {renderDeleteProductModal()}\r\n      {renderUpdateProductsModal()}\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import React, { useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { Container, Row, Col, Table } from \"react-bootstrap\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addProduct, deleteProductById } from \"../../actions\";\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function Products\r\n **/\r\n\r\n/* const Products = (props) => {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    \r\n  }\r\n\r\n    const submitProductForm = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n\r\n    dispatch(addProduct(form)).then(() => setShow(false));\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>2</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>{product.category.name}</td>\r\n                  <td>\r\n                    <button onClick={() => showProductDetailsModal(product)}>\r\n                      info\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        const payload = {\r\n                          productId: product._id,\r\n                        };\r\n                        dispatch(deleteProductById(payload));\r\n                      }}\r\n                    >\r\n                      del\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Product\"}\r\n        onSubmit={submitProductForm}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>select category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n        <input\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        show={productDetailModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        modalTitle={\"Product Details\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">{productDetails.category.name}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Product Pictures</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productPictures.map((picture) => (\r\n                <div className=\"productImgContainer\">\r\n                  <img src={picture.img} alt=\"\" />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Products; */ "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}